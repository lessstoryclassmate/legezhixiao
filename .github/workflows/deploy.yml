name: Deploy AI Novel Editor (Clone Mode)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_NAME: ai-novel-editor
  DEPLOY_DIR: /opt/ai-novel-editor

jobs:
  # 快速部署 (克隆模式)
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}
        
    - name: Add server to known hosts
      run: ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
        
    - name: Deploy to production server
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SILICONFLOW_API_KEY: ${{ secrets.SILICONFLOW_API_KEY }}
        JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
        PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      run: |
        # 上传简化的部署脚本
        scp scripts/quick-deploy.sh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/tmp/
        
        # 执行部署
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} \
          "export SERVER_IP=\"$SERVER_IP\" && \
           export SILICONFLOW_API_KEY=\"$SILICONFLOW_API_KEY\" && \
           export JWT_SECRET_KEY=\"$JWT_SECRET_KEY\" && \
           export REDIS_PASSWORD=\"$REDIS_PASSWORD\" && \
           export PERSONAL_ACCESS_TOKEN=\"$PERSONAL_ACCESS_TOKEN\" && \
           export GITHUB_REPOSITORY=\"${{ github.repository }}\" && \
           chmod +x /tmp/quick-deploy.sh && \
           bash /tmp/quick-deploy.sh"
        
    - name: Health check
      run: |
        echo "🔍 健康检查..."
        sleep 60  # 等待服务启动
        
        # 检查前端
        if curl -f --max-time 30 http://${{ secrets.SERVER_IP }}:80 > /dev/null 2>&1; then
          echo "✅ 前端服务正常"
        else
          echo "⚠️ 前端服务检查失败"
        fi
        
        # 检查后端
        if curl -f --max-time 30 http://${{ secrets.SERVER_IP }}:8000/health > /dev/null 2>&1; then
          echo "✅ 后端服务正常"
        else
          echo "⚠️ 后端服务检查失败"
        fi
        
    - name: Deployment notification
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "🎉 克隆模式部署成功！"
          echo ""
          echo "🌐 服务地址:"
          echo "  前端: http://${{ secrets.SERVER_IP }}:80"
          echo "  后端: http://${{ secrets.SERVER_IP }}:8000"
          echo "  文档: http://${{ secrets.SERVER_IP }}:8000/docs"
          echo ""
          echo "⚡ 部署模式: 克隆模式 (快速部署)"
        else
          echo "❌ 部署失败！请检查日志"
        fi
